// 마지막고침 : 2020.11.17
// win32 Visual C 2010 이상컴파일시 추가
// 프로그램 가장 첫 줄에 추가할 것
#define _CRT_SECURE_NO_WARNINGS
//-----------------------------------------

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <conio.h>
#include "header.h"

/* for oracle */
#include <sqlda.h>
#include <sqlca.h>
#include <sqlcpr.h>

void empMain();
void search_Use_All();
void seach_Buy_All();
void pc_start_now();
void gogak_list();
void UOrD();
void gogakD();
int check_gogak();
void food_list();
int search_food();

// win32 Visual C 2010 이상컴파일시 추가
#define getch() _getch()
//-----------------------------------------

//#ifdef WIN32
#include < windows.h >

#define getch() _getch()
int fail;
  EXEC SQL WHENEVER SQLERROR DO fail = sql_error("\7ORACLE ERROR:\n");

/*---------------  관리자 메뉴 시작 함수 --------------------*/
void empMain(){
	char emp_select[10];
	
	while(1){
		clrscr();
		print_screen("empMain.txt");
		gotoxy(32,17);
		gets_s(emp_select, sizeof emp_select);
		if( strcmp(emp_select,"1") == 0){
			food_list();
		}else if (strcmp(emp_select,"2") == 0){
			gogak_list();
		}else if (strcmp(emp_select,"3") == 0){
			pc_start_now();
		}else if (strcmp(emp_select,"4") == 0){
			search_Use_All();
		}else if (strcmp(emp_select,"5") == 0){
			seach_Buy_All();
		}else if(strcmp(emp_select,"exit") == 0){
			start();
		}else{
			gotoxy(25,18); // 잘 못 입력 되었다는 것을 알리기
			printf("잘못된 입력입니다. 다시 입력해주세요");
			getch();
		}
		
	}

}

/*---------------   사용 이력 전체 조회 함수 --------------------*/
void search_Use_All(){
	clrscr();
	print_screen("pcUsingAll.txt");
	int x,y,count=0, page=1;
	EXEC SQL BEGIN DECLARE SECTION;
   		varchar hnum[100];
		varchar gid[100];
		varchar gname[100];
  		varchar seat[100];
		varchar day[100];
		varchar stime[100];
		varchar etime[100];	

  		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;
	
	//EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
	
	char searchID[20];
	gotoxy(17,8);
	gets_s(searchID, sizeof searchID);
	if(searchID[0] == '\0' ) {
    		   strcpy(searchID, "%%");
	   }else{
		char a[10] = "%";
		strcat(searchID,a);
		strcat(a,searchID);
		strcpy(searchID, a);

	}
	
	/* 실행시킬 SQL 문장*/
   	sprintf(dynstmt,"select to_char(hnum), g.gid, g.gname, to_char(seat), to_char(stime, 'YYYY-MM-DD'), to_char(stime, 'HH24:MI') , nvl2(etime, to_char(stime, 'HH24:MI'),to_char('사용 중')) from use_history h join gogak g on h.gid = g.gid where g.gid like '%s' order by hnum desc", searchID); 

	EXEC SQL PREPARE S FROM :dynstmt ;

	/* cursor 선언 */
	EXEC SQL DECLARE b_cursor CURSOR FOR S ; 
	
	/* cursor open */
	EXEC SQL OPEN b_cursor ; 

	EXEC SQL WHENEVER NOT FOUND DO break;
	int exit;
	char c;
	x = 7;
  	y = 13 ;
  	for (;;){
		EXEC SQL FETCH b_cursor INTO :hnum,:gid, :gname, :seat, :day, :stime, :etime;
		
		hnum.arr[hnum.len] = '\0' ;
		gid.arr[gid.len] = '\0' ;
		gname.arr[gname.len] = '\0';
		seat.arr[seat.len] = '\0';
		day.arr[day.len] = '\0' ;
		stime.arr[stime.len] = '\0';
		etime.arr[etime.len] = '\0' ;

		gotoxy(x,y);
		printf("%-3s %-10s%-5s   %3s   %-11s    %-8s   %-10s", hnum.arr, gid.arr, gname.arr, seat.arr,day.arr,stime.arr,etime.arr);

		y++;
		count++;
		gotoxy(40,19);
		printf("%-2d",page);
		if( count == 5){
			page++;
			count = 0;
   			 while (1) {
        				if (_kbhit()) {             
           					 c = _getch();        
          					  if (c == -32) {       
              					c = _getch();   
						  if(c==77){
							break;
	 					   }
					}
				}
			}
			gotoxy(8,13); //이전 화면 부분 클리어	
	            	  	for(int i= 0; i < 5; i++){
				printf("                                                                                                                 \n");
			}
			y = 13 ;
		}

   	 }
	gotoxy(71,18);
	printf("(END)");
	getch();

    	/* Close the cursor. */
   	EXEC SQL CLOSE b_cursor;

   	EXEC SQL COMMIT ;
}
/*---------------   구매 이력 전체 조회 함수 --------------------*/
void seach_Buy_All(){
clrscr();
	print_screen("buyAll.txt");
	
	int x,y,count=0, page=1;
	EXEC SQL BEGIN DECLARE SECTION;
   		varchar snum[100];
		varchar gid[100];
		varchar gname[100];
		varchar pname[100];
		varchar date[100];
		varchar samount[100];
		varchar pprice[100];
		varchar total[100];	

  		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;
	
	//EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
	
	char searchID[20];
	gotoxy(13,7);
	gets_s(searchID, sizeof searchID);
	if(searchID[0] == '\0' ) {
    		   strcpy(searchID, "%%");
	   }else{
		char a[10] = "%";
		strcat(searchID,a);
		strcat(a,searchID);
		strcpy(searchID, a);

	}

	/* 실행시킬 SQL 문장*/
   	sprintf(dynstmt,"select to_char(s.snum),g.gid,g.gname, to_char(p.pname), to_char(s.sales_date, 'YY-MM-DD HH24:MI'), to_char(s.samount),to_char(p.pprice) ,to_char(s.samount*p.pprice) from gogak g join sales s  on g.gid = s.gid join product p on s.pnum = p.pnum where g.gid like '%s' order by s.snum desc", searchID); 

	EXEC SQL PREPARE S FROM :dynstmt ;

	/* cursor 선언 */
	EXEC SQL DECLARE a_cursor CURSOR FOR S ; 
	
	/* cursor open */
	EXEC SQL OPEN a_cursor ; 

	EXEC SQL WHENEVER NOT FOUND DO break;

	x = 4;
  	y = 11 ;
  	for (;;){
		
		EXEC SQL FETCH a_cursor INTO :snum,:gid,:gname, :pname, :date, :samount, :pprice, :total;
		
		snum.arr[snum.len] = '\0' ;
		gid.arr[gid.len] = '\0' ;
		gname.arr[gname.len] = '\0' ;
		pname.arr[pname.len] = '\0' ;
		date.arr[date.len] = '\0';
		samount.arr[samount.len] = '\0' ;
		pprice.arr[pprice.len] = '\0' ;
		total.arr[total.len] = '\0' ;
		

		gotoxy(x,y);
		printf("%-3s  %-10s%-5s  %14s %14s %3s %7s%10s", snum.arr,gid.arr,gname.arr,date.arr,  pname.arr,samount.arr, pprice.arr, total.arr);

		y++;
		count++;
		gotoxy(40,17);
		printf("%-2d",page);
		if( count == 5){
			page++;
			count = 0;
			char c;
			while (1) {
        				if (_kbhit()) {             
           					 c = _getch();        
          					  if (c == -32) {       
              						  c = _getch();   
						  if(c==77){
							break;
	 					   }
					}else if(c==13){
						empMain();
					}
				}
			}
			gotoxy(8,11); //이전 화면 부분 클리어	
	            	  	for(int i= 0; i < 5; i++){
				printf("                                                                                             \n");
			}
			y = 11 ;
		}

   	 }
	gotoxy(73,18);
    	printf("(END)");
	getch();

    	/* Close the cursor. */
   	EXEC SQL CLOSE a_cursor;

   	EXEC SQL COMMIT ;
}
/*---------------   회원 전체 조회 함수 --------------------*/
void gogak_list(){
clrscr();
	print_screen("gogak_list.txt");
		
	EXEC SQL BEGIN DECLARE SECTION;
   		varchar v_id[20];
		varchar v_pw[20];
   		 varchar  v_name[20];
		varchar v_phone[20];
	
    		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;
    
	
    
   // EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
   
    sprintf(dynstmt,"select * from gogak") ;
		int page=1, count=0;
   		 EXEC SQL PREPARE S FROM :dynstmt ;

  		  EXEC SQL DECLARE q_cursor CURSOR FOR S ; 

  		  EXEC SQL OPEN q_cursor ; 

  
  		  EXEC SQL WHENEVER NOT FOUND do break;
			int x = 14;
			int y = 10;
	
    for(;;)
    {
        EXEC SQL FETCH q_cursor INTO :v_id, :v_name, :v_pw, :v_phone;
		
		v_id.arr[v_id.len] = '\0' ;
		v_name.arr[v_name.len] = '\0' ;
		v_pw.arr[v_pw.len] = '\0' ;
		v_phone.arr[v_phone.len] = '\0' ;

		gotoxy(x,y);
		printf("%10s %10s%14s %13s", v_id.arr, v_pw.arr, v_name.arr, v_phone.arr);

		y++;
		count++;
		gotoxy(39,16);
		printf("%-2d",page);
		gotoxy(71,22);
		if( count == 5){
			page++;
			count = 0;
			char c;
			while (1) {
        				if (_kbhit()) {             
           					 c = _getch();        
          					  if (c == -32) {       
              						  c = _getch();   
						  if(c==77){
							break;
	 					   }
					}else if(c==13){
						UOrD();
						empMain();
					}
				}
			}
			gotoxy(8,11); //이전 화면 부분 클리어	
	            	  	for(int i= 0; i < 5; i++){
				printf("                                                                                             \n");
			}
			y = 11 ;
		}
    	}	
	EXEC SQL CLOSE q_cursor; 
	
	gotoxy(66,17);
    	printf("(END)");
	gotoxy(62,22);
	printf("                            ");
	gotoxy(62,22);
	printf("나가기");
	UOrD();
    
}
/*---------------   사용자 변경 또는 삭제 조회 함수 --------------------*/
void UOrD(){
	char change_n[10];
	while(1){
		gotoxy(32,18);
		printf("1. 수정 2. 삭제 >> ");
		gets_s(change_n, sizeof change_n);
		if(change_n[0] == '\0' ) {
    			break;
		}else if(strcmp(change_n,"1")==0){
			int check = check_gogak();
			if(check==1){
				gogakUpdate();
				break;
			}
		}else if(strcmp(change_n,"2")==0){
			int check = check_gogak();
			if(check==1){
				gogakD();
				break;
			}
		}else{
			gotoxy(32,19);
			printf("잘 못 입력 했습니다.");
			getch();
			gotoxy(32,19);
			printf("                             ");
			gotoxy(51,18);
			printf("                           ");
		}
	}	
}
/*---------------   회원 삭제 함수 --------------------*/
void gogakD(){

EXEC SQL BEGIN DECLARE SECTION;

	   char dynstmt[1000];

	EXEC SQL END DECLARE SECTION;
	
	
	char  flag[10];

   	//EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
	
	while(1){
		gotoxy(21,20);
		printf("정말 회원을 탈퇴시키겠습니까?? (y/n) >> ");   
		gets_s(flag, sizeof flag);
   		if( strcmp(flag,"y") == 0|| strcmp(flag,"Y") == 0 ){
       			sprintf(dynstmt,"delete from gogak where gid = '%s' ", gogakID);
			if(gogakUSING==1){
				gotoxy(32,21);
				printf("현재 사용 중 입니다.!");
				getch();
				break;	
			}else{
				EXEC SQL EXECUTE IMMEDIATE :dynstmt ;
		       		EXEC SQL COMMIT WORK ; 
				gotoxy(31,21);
				printf("탈퇴를 완료했습니다..\n");
				getch();
				break;
			}
		   }
   		else {
			gotoxy(31,21);
      		 	printf("탈퇴를 취소했습니다.");
			getch();
   		}
		gotoxy(20,19);
   		printf("                                                                        \n");   
		printf("                                                                        \n");   
		printf("                                                                        \n");   
		break;
	}
}
/*---------------   사용자가 있는지 조회 함수 --------------------*/
int check_gogak(){
	gotoxy(28,19);
	printf("회원 ID를 작성해 주세요 >> ");
	while(1){
		gotoxy(54,19);
		char select_id[20];
		gets_s(select_id, sizeof select_id);
		int id_check = Select_tuple(select_id);
		if(select_id[0] == '\0'){
			break;	
			gotoxy(28,19);
			printf("                                                    ");
		}
		if(id_check == 0){
			gotoxy(28,20);
			printf("존재하지 않는 아이디 입니다.");
			getch();
			gotoxy(28,20);
			printf("                                                  ");
			gotoxy(54,19);
			printf("                                                  ");
		}else{
			return 1;
		}
	}
	return 0;
}

/*---------------   현재 사용 현황 조회 함수 --------------------*/
void pc_start_now(){
	clrscr();
	print_screen("useState.txt");
		
	EXEC SQL BEGIN DECLARE SECTION;
   		 int  v_seat;
   		 varchar  v_name[20];
	
    		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;
    
	
    
   // EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");
   
    sprintf(dynstmt,"select u.seat, g.gname from use_history u join gogak g on u.gid = g.gid where etime is Null") ;
	
    EXEC SQL PREPARE S FROM :dynstmt ;

    EXEC SQL DECLARE w_cursor CURSOR FOR S ; 

    EXEC SQL OPEN w_cursor ; 

  
    EXEC SQL WHENEVER NOT FOUND do break;
	char arr[SEAT];
	for(int i=0; i<SEAT;i++){
		arr[i]='y';
	}
    for(;;)
    {
        EXEC SQL FETCH w_cursor INTO :v_seat, :v_name;
	int x=0, y=0;
	
	v_name.arr[v_name.len] = '\0';
	if( v_seat > 5 ){
		y = 15;
		x = ((v_seat-5)*5) + ((v_seat-6)*11);
	}else{
		y =10;
		x = (v_seat*5) + ((v_seat-1)*11);
	}
	
	arr[v_seat-1] = 'n';
	gotoxy(x,y);
	printf("%s",v_name.arr);
    }	
	getch();
    EXEC SQL CLOSE w_cursor; 
}

/*---------------   음식 관리 함수 --------------------*/
void food_list(){
	clrscr();
	print_screen("food_list.txt");
	
	int x,y,count=0, page=0;
	EXEC SQL BEGIN DECLARE SECTION;
   		varchar pnum[100];
		varchar pname[100];
		int pamount;
		int pprice;

  		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;
	
	//EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");

	/* 실행시킬 SQL 문장*/
   	sprintf(dynstmt,"select * from product order by pnum asc"); 

	EXEC SQL PREPARE S FROM :dynstmt ;

	/* cursor 선언 */
	EXEC SQL DECLARE z_cursor CURSOR FOR S ; 
	
	/* cursor open */
	EXEC SQL OPEN z_cursor ; 

	EXEC SQL WHENEVER NOT FOUND DO break;

	x = 18;
  	y = 10;
  	for (;;){
		EXEC SQL FETCH z_cursor INTO :pnum, :pname, :pamount, :pprice;
		
		pnum.arr[pnum.len] = '\0' ;
		pname.arr[pname.len] = '\0' ;
	

		gotoxy(x,y);
		printf("%s   %15s            %-7d    %-3d", pnum.arr, pname.arr ,pprice,pamount);

		y++;
		count++;
		
		if( count == 5){
			count = 0;
			getch();
			gotoxy(8,11); //이전 화면 부분 클리어	
	            	  	for(int i= 0; i < 5; i++){
				printf("                                                                                             \n");
			}
			y = 11 ;
		}

   	 }
	gotoxy(71,18);
    	printf("(END)");
	getch();

    	/* Close the cursor. */
   	EXEC SQL CLOSE z_cursor;

   	EXEC SQL COMMIT ;
}

/*---------------   음식 등록 함수 --------------------*/
void input_food(){
	clrscr();
	print_screen("foodinfo.txt");
	
	
	
}
/*---------------   음식 검색함수 --------------------*/
int search_food(char food_name[20]){
	EXEC SQL BEGIN DECLARE SECTION;
   		char pname[10];
  		char dynstmt[1000];
	EXEC SQL END DECLARE SECTION;

	/* 실행시킬 SQL 문장*/
   	sprintf(dynstmt,"select pname from product where = %s", food_name); 

	EXEC SQL PREPARE S FROM :dynstmt ;

	/* cursor 선언 */
	EXEC SQL DECLARE z_cursor CURSOR FOR S ; 
	
	/* cursor open */
	EXEC SQL OPEN z_cursor ; 

	EXEC SQL WHENEVER NOT FOUND DO break;

  	for (;;){
		EXEC SQL FETCH z_cursor INTO :pname;
		return 1;
   	 }
	
    	/* Close the cursor. */
   	EXEC SQL CLOSE z_cursor;
	return 0;	
}
